{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","console","log","nextSibling","parentNode","insertBefore","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","restoreContext","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.45b0ef52.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create(string) {\r\n        const container = document.createElement(\"template\");\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n    after(node, node2) {\r\n        console.log(node.nextSibling);\r\n        node.parentNode.insertBefore(node2, node.nextSibling);\r\n    },\r\n    before(node, node2) {\r\n        node.parentNode.insertBefore(node2, node);\r\n    },\r\n    append(parent, node) {\r\n        parent.appendChild(node)\r\n    },\r\n    wrap(node, parent) {\r\n        dom.before(node, parent);\r\n        dom.append(parent, node);\r\n    },\r\n    remove(node) {\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node) {\r\n        const {childNodes} = node\r\n        const array = []\r\n        let x = node.firstChild\r\n        while (x) {\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return array\r\n    },\r\n    attr(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value)\r\n        } else if (arguments.length === 2) {\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    text(node, string) {//适配\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) {\r\n                node.innerText = string\r\n            } else {\r\n                node.restoreContext = string\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText' in node) {\r\n                return node.innerText\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string\r\n        } else if (arguments.length === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                const object = name\r\n                for (let key in object) {\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    class: {\r\n        add(node, className) {\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className) {\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n    find(selector, scope) {\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node) {\r\n        return node.parentNode\r\n    },\r\n    children(node) {\r\n        return node.children\r\n    },\r\n    siblings(node) {\r\n        return Array.from(node.parentNode.children)\r\n            .filter(n => n !== node)\r\n    },\r\n    next(node) {\r\n        let x = node.nextSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node) {\r\n        let x = node.previousSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    index(node) {\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i] === node) {\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n};"]}